// Code Generated by Sidekick is for learning and experimentation purposes only.
function validate(password) {
    const failed = [];

    // Rule 1: At least 16 characters long
    if (password.length < 16) {
        failed.push(1);
    }

    // Rule 2: Cannot contain "password" (case-insensitive)
    if (password.toLowerCase().includes("password")) {
        failed.push(2);
    }

    // Rule 3: No character appears more than 4 times (case-sensitive)
    const charCounts = {};
    for (let char of password) {
        charCounts[char] = (charCounts[char] || 0) + 1;
    }
    if (Object.values(charCounts).some(count => count > 4)) {
        failed.push(3);
    }

    // Rule 4: At least one uppercase and one lowercase letter
    const hasUpper = /[A-Z]/.test(password);
    const hasLower = /[a-z]/.test(password);
    if (!(hasUpper && hasLower)) {
        failed.push(4);
    }

    // Rule 5: At least one of "*", "#", "@"
    if (!/[*#@]/.test(password)) {
        failed.push(5);
    }

    return failed;
}

// Test cases
const password_1 = "Strongpwd9999#ac";
const password_2 = "Aess10#";
const password_3 = "Password@";
const password_4 = "#PassWord011111112222223x";
const password_5 = "PASSWORDz#1111111";
const password_6 = "aaaapassword$$";
const password_7 = "LESS10#";
const password_8 = "SsSSSt#passWord";
const password_9 = "SsSSSt#passWordpassword";
const password_10 = "aZ*";

// Example usage:
console.log(validate(password_1)); // []
console.log(validate(password_2)); // [1]
console.log(validate(password_3)); // [1,2]
console.log(validate(password_4)); // [2,3]
console.log(validate(password_5)); // [2,3]
console.log(validate(password_6)); // [1,2,3,4,5]
console.log(validate(password_7)); // [1,4]
console.log(validate(password_8)); // [1,2]
console.log(validate(password_9)); // [2,3]
console.log(validate(password_10)); // [1]
